# This runs code signing for .nupkg files built on MacOS or Linux
parameters:
  inputName: ''

jobs:
- template: default-build.yml
  parameters:
    codeSign: true
    dependsOn:
    - ${{ parameters.inputName }}_build
    condition: and(in(variables['_SignType'], 'test', 'real'), in(dependencies.${{ parameters.inputName }}_build.result, 'Succeeded', 'SucceededWithIssues'))
    jobName: CodeSign_Xplat_${{ parameters.inputName }}
    jobDisplayName: "Code-sign ${{ parameters.inputName }} packages"
    agentOs: Windows
    installNodeJs: false
    installJdk: false
    variables:
    - DOTNET_HOME: $(Build.SourcesDirectory)/.dotnet
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: Download ${{ parameters.inputName }} artifacts
      inputs:
        artifactName: ${{ parameters.inputName }}_Packages
        downloadPath: $(Build.StagingDirectory)/deps/
        itemPattern: '**/*.nupkg'
    - script: echo "##vso[task.prependpath]$BUILD_SOURCESDIRECTORY/.dotnet"
      displayName: Add .dotnet to path
    - powershell: . ./activate.ps1
      displayName: Activate
    - powershell: ./build.ps1 -all -nobuild -restore
      displayName: Restore tools
    - task: MSBuild@1
      displayName: Code-sign .nupkg files
      inputs:
        solution: eng\tools\XplatPackageSigner\XplatPackageSigner.csproj
        configuration: $(BuildConfiguration)
        msbuildArguments: /p:SignType=$(_SignType)
          /p:AssetManifestFileName=aspnetcore-${{ parameters.inputName }}-signed.xml
          $(_PublishArgs)
          /p:DirectoryToSign=$(Build.StagingDirectory)\deps\${{ parameters.inputName }}_Packages\
          /bl:artifacts/log/${{ parameters.inputName }}.binlog
    artifacts:
    - name: ${{ parameters.inputName }}_Packages_Signed
      path: $(Build.StagingDirectory)\deps\${{ parameters.inputName }}_Packages\
    - name: ${{ parameters.inputName }}_Logs
      path: artifacts/log/
      publishOnError: true
